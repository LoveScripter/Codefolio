@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 220 13% 18%;

  --border: 220 13% 91%;

  --card: 0 0% 100%;

  --card-foreground: 220 13% 18%;

  --card-border: 220 13% 95%;

  --sidebar: 214 32% 91%;

  --sidebar-foreground: 220 13% 18%;

  --sidebar-border: 214 32% 87%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 214 32% 85%;

  --sidebar-accent-foreground: 220 13% 18%;

  --sidebar-ring: 217 91% 60%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 13% 18%;

  --popover-border: 220 13% 94%;

  --primary: 217 91% 60%;

  --primary-foreground: 0 0% 98%;

  --secondary: 214 32% 94%;

  --secondary-foreground: 220 13% 18%;

  --muted: 220 13% 95%;

  --muted-foreground: 220 13% 46%;

  --accent: 214 32% 92%;

  --accent-foreground: 220 13% 18%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 88%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 142 71% 45%;
  --chart-3: 36 77% 49%;
  --chart-4: 271 81% 56%;
  --chart-5: 0 84% 60%;

  --font-sans: Inter, system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 18% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px 0px hsl(220 13% 18% / 0.06);
  --shadow-sm: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px -1px hsl(220 13% 18% / 0.10);
  --shadow: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px -1px hsl(220 13% 18% / 0.10);
  --shadow-md: 0px 4px 6px -1px hsl(220 13% 18% / 0.10), 0px 2px 4px -1px hsl(220 13% 18% / 0.06);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 18% / 0.10), 0px 4px 6px -2px hsl(220 13% 18% / 0.05);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 18% / 0.10), 0px 10px 10px -5px hsl(220 13% 18% / 0.04);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 18% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 222 84% 5%;

  --foreground: 210 40% 98%;

  --border: 222 84% 11%;

  --card: 220 13% 18%;

  --card-foreground: 210 40% 98%;

  --card-border: 220 13% 21%;

  --sidebar: 222 84% 8%;

  --sidebar-foreground: 210 40% 98%;

  --sidebar-border: 222 84% 11%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 222 84% 5%;

  --sidebar-accent: 220 13% 15%;

  --sidebar-accent-foreground: 210 40% 98%;

  --sidebar-ring: 217 91% 60%;

  --popover: 220 13% 15%;

  --popover-foreground: 210 40% 98%;

  --popover-border: 220 13% 18%;

  --primary: 217 91% 60%;

  --primary-foreground: 222 84% 5%;

  --secondary: 220 13% 15%;

  --secondary-foreground: 210 40% 98%;

  --muted: 220 13% 12%;

  --muted-foreground: 220 13% 63%;

  --accent: 220 13% 12%;

  --accent-foreground: 210 40% 98%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 210 40% 98%;

  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */
  --input: 220 13% 24%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 70%;
  --chart-2: 142 71% 55%;
  --chart-3: 36 77% 59%;
  --chart-4: 271 81% 66%;
  --chart-5: 0 84% 70%;

  --shadow-2xs: 0px 1px 2px 0px hsl(222 84% 5% / 0.20);
  --shadow-xs: 0px 1px 3px 0px hsl(222 84% 5% / 0.30), 0px 1px 2px 0px hsl(222 84% 5% / 0.20);
  --shadow-sm: 0px 1px 3px 0px hsl(222 84% 5% / 0.30), 0px 1px 2px -1px hsl(222 84% 5% / 0.30);
  --shadow: 0px 1px 3px 0px hsl(222 84% 5% / 0.30), 0px 1px 2px -1px hsl(222 84% 5% / 0.30);
  --shadow-md: 0px 4px 6px -1px hsl(222 84% 5% / 0.30), 0px 2px 4px -1px hsl(222 84% 5% / 0.20);
  --shadow-lg: 0px 10px 15px -3px hsl(222 84% 5% / 0.30), 0px 4px 6px -2px hsl(222 84% 5% / 0.15);
  --shadow-xl: 0px 20px 25px -5px hsl(222 84% 5% / 0.30), 0px 10px 10px -5px hsl(222 84% 5% / 0.12);
  --shadow-2xl: 0px 25px 50px -12px hsl(222 84% 5% / 0.50);

}

.professional-blue {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 214 32% 91%;

  --foreground: 220 13% 18%;

  --border: 214 32% 85%;

  --card: 0 0% 100%;

  --card-foreground: 220 13% 18%;

  --card-border: 214 32% 87%;

  --sidebar: 214 32% 88%;

  --sidebar-foreground: 220 13% 18%;

  --sidebar-border: 214 32% 82%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 214 32% 82%;

  --sidebar-accent-foreground: 220 13% 18%;

  --sidebar-ring: 217 91% 60%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 13% 18%;

  --popover-border: 214 32% 87%;

  --primary: 217 91% 60%;

  --primary-foreground: 0 0% 98%;

  --secondary: 214 32% 85%;

  --secondary-foreground: 220 13% 18%;

  --muted: 214 32% 87%;

  --muted-foreground: 220 13% 46%;

  --accent: 217 91% 60%;

  --accent-foreground: 0 0% 98%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 214 32% 82%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 142 71% 45%;
  --chart-3: 36 77% 49%;
  --chart-4: 271 81% 56%;
  --chart-5: 0 84% 60%;

  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 18% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px 0px hsl(220 13% 18% / 0.06);
  --shadow-sm: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px -1px hsl(220 13% 18% / 0.10);
  --shadow: 0px 1px 3px 0px hsl(220 13% 18% / 0.10), 0px 1px 2px -1px hsl(220 13% 18% / 0.10);
  --shadow-md: 0px 4px 6px -1px hsl(220 13% 18% / 0.10), 0px 2px 4px -1px hsl(220 13% 18% / 0.06);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 18% / 0.10), 0px 4px 6px -2px hsl(220 13% 18% / 0.05);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 18% / 0.10), 0px 10px 10px -5px hsl(220 13% 18% / 0.04);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 18% / 0.25);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Custom WOW animations and effects */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }

  @keyframes floatSlow {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-15px) rotate(180deg); }
  }

  @keyframes floatMedium {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-25px) rotate(-180deg); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px rgba(66, 153, 225, 0.5); }
    50% { box-shadow: 0 0 40px rgba(66, 153, 225, 0.8), 0 0 60px rgba(66, 153, 225, 0.4); }
  }

  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes particle-float {
    0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
  }

  @keyframes sparkle {
    0%, 100% { opacity: 0; transform: scale(0.5) rotate(0deg); }
    50% { opacity: 1; transform: scale(1) rotate(180deg); }
  }

  .floating-animation {
    animation: float 3s ease-in-out infinite;
  }

  .floating-slow {
    animation: floatSlow 4s ease-in-out infinite;
  }

  .floating-medium {
    animation: floatMedium 3.5s ease-in-out infinite;
  }

  .pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .gradient-shift {
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
  }

  .particle-float {
    animation: particle-float linear infinite;
  }

  .sparkle-effect {
    animation: sparkle 1.5s ease-in-out infinite;
  }

  /* Floating particles background */
  .floating-particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
  }

  .floating-particles::before,
  .floating-particles::after {
    content: '';
    position: absolute;
    width: 4px;
    height: 4px;
    background: linear-gradient(45deg, #3b82f6, #8b5cf6);
    border-radius: 50%;
    animation: particle-float 15s linear infinite;
  }

  .floating-particles::before {
    left: 20%;
    animation-delay: -5s;
    animation-duration: 20s;
  }

  .floating-particles::after {
    left: 80%;
    animation-delay: -10s;
    animation-duration: 18s;
  }

  /* Scroll reveal animations */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Interactive cursor effect */
  .cursor-glow {
    position: fixed;
    width: 20px;
    height: 20px;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.5) 0%, transparent 70%);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    transition: all 0.1s ease;
  }

  /* Theme-aware gradient text */
  .gradient-text {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6, #ec4899);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-shift 3s ease infinite;
  }

  /* Morphing shapes */
  .morphing-blob {
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    animation: morphing 8s ease-in-out infinite;
  }

  @keyframes morphing {
    0%, 100% { border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%; }
    25% { border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%; }
    50% { border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%; }
    75% { border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%; }
  }
}